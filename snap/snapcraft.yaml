name: agda-stdlib-plfa # you probably want to 'snapcraft register <name>'
base: core24 # the base snap is the execution environment for this snap
version: 'agda2.8.0+stdlib2.3+0.4' 
summary:  dependently typed functional programming language
website: "https://agda.readthedocs.io/en/v2.8.0/"
description: |
  Agda is a dependently typed programming language. This snap packages the Agda compiler, the Agda standard library,
  and the source code of the textbook Programming Languages Foundations in Agda.
  If the $AGDA_DIR environment variable is not set, it defaults to $SNAP/agda_dir,
  which contains `libraries` and `defaults` files referencing stdlib and plfa.
  This package is intended to be installed on servers or school labs,
  regular users of agda should install in the typical way.

grade: stable
confinement: strict

parts:
  agda:
    plugin: dump
    source-type: tar
    source: https://github.com/agda/agda/releases/download/v2.8.0/Agda-v2.8.0-linux.tar.xz
    organize:
      agda: bin/agda


  scripts:
    plugin: dump
    source: ./bin
    source-type: local
    organize:
      wrapper.sh: bin/wrapper.sh
      setup.sh: bin/setup.sh
      agda-do-initial-setup: bin/agda-do-initial-setup
      agda-setup-stdlib-plfa.sh: bin/agda-setup-stdlib-plfa.sh
    after: [agda]


  agda-dir:
    plugin: dump
    source: ./agda-dir
    source-type: local
    organize:
      libraries: agda-dir/libraries
      defaults: agda-dir/defaults
    after: [agda]

  agda-stdlib:
    plugin: dump
    source: https://github.com/agda/agda-stdlib.git
    source-type: git
    source-branch: v2.3
    source-depth: 1
    after: [agda]
    organize:
      src: agda-stdlib/src
      standard-library.agda-lib: agda-stdlib/standard-library.agda-lib
    stage:
      - agda-stdlib/src
      - agda-stdlib/standard-library.agda-lib

  plfa:
    plugin: dump
    source: https://github.com/plfa/plfa.github.io.git
    source-type: git
    source-branch: dev
    source-depth: 1
    after: [agda]
    organize:
      src: plfa/src
    stage:
      - plfa/src

  # build-stdlib:
  #   plugin: nil
  #   after: [agda, agda-stdlib]
  #   override-build: |
  #     mkdir -p $SNAPCRAFT_PART_INSTALL/agda-stdlib
  #     cd $SNAPCRAFT_STAGE/agda-stdlib
  #     $SNAPCRAFT_STAGE/bin/agda --build-library
  #     cp -r ./_build $SNAPCRAFT_PART_INSTALL/agda-stdlib/

  # build-plfa:
  #   plugin: nil
  #   after: [agda, plfa, agda-stdlib, build-stdlib]
  #   override-build: |
  #     mkdir -p plfa/_build
  #     cd plfa/_build
  #     BUILD_DIR=`pwd`
  #     cd $SNAPCRAFT_STAGE/plfa/src
  #     echo "$SNAPCRAFT_STAGE/agda-stdlib/standard-library.agda-lib" > ./libraries
  #     for f in ./plfa/*/*.lagda.md; do $SNAPCRAFT_STAGE/bin/agda $f -WnoRewritesNothing  --library-file=./libraries ; done
  #     rm ./libraries
  #     mkdir -p $SNAPCRAFT_PART_INSTALL/plfa
  #     cp -r ./_build $SNAPCRAFT_PART_INSTALL/plfa/

apps:
  agda:
    command: bin/wrapper.sh
    plugs: [home]


